rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow authenticated users to read other users' profiles for crew discovery
      allow read: if request.auth != null;
      // Admins can read and write all user documents
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Chat rooms - users can read rooms they participate in
    match /chatRooms/{roomId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      // Admins can read all chat rooms for statistics
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Chat messages - users can read/write messages in rooms they participate in
    match /chatMessages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(resource.data.roomId)).data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(request.resource.data.roomId)).data.participants;
      // Admins can read all messages for statistics
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Notifications - users can read their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Connections - users can read/write their own connections
    match /connections/{connectionId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || request.auth.uid == resource.data.connectedUserId);
      allow create: if request.auth != null && 
        (request.auth.uid == request.resource.data.userId || request.auth.uid == request.resource.data.connectedUserId);
      // Admins can read all connections for statistics
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
        // Connection requests - users can read/write their own requests
        match /connectionRequests/{requestId} {
          allow read, write: if request.auth != null && 
            (request.auth.uid == resource.data.requesterId || request.auth.uid == resource.data.receiverId);
          allow create: if request.auth != null && 
            (request.auth.uid == request.resource.data.requesterId || request.auth.uid == request.resource.data.receiverId);
          // Admins can read all connection requests for statistics
          allow read: if request.auth != null && 
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
        }
        
        // Notifications - users can read/write their own notifications
        match /notifications/{notificationId} {
          allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
          allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
          // Admins can read all notifications for statistics
          allow read: if request.auth != null && 
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
        }
    
    // Reports - users can create reports, admins can read all
    match /reports/{reportId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Departments - all authenticated users can read, only admins can write
    match /departments/{departmentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Roles - all authenticated users can read, only admins can write
    match /roles/{roleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Cruise Lines - all authenticated users can read, only admins can write
    match /cruiseLines/{cruiseLineId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Ships - all authenticated users can read, only admins can write
    match /ships/{shipId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Admin collections - only admins can access
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
